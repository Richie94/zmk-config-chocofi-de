/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include "keys_de.h"

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define NUM     3
#define MEDIA   4
#define FUN     5
#define MOUSE   6

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41


&lt {
    quick-tap-ms = <200>;
    tapping-term-ms = <170>;
};

/ {

    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        hml: home_row_mod_left {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "balanced";
                    require-prior-idle-ms = <150>;
                    tapping-term-ms = <280>;
                    quick-tap-ms = <175>;
                    bindings = <&kp>, <&kp>;
                    hold-trigger-key-positions = <KEYS_R>; // List of keys on the right side of the keyboard
                    hold-trigger-on-release;
                };
        hmr: home_row_mod_right {
                    compatible = "zmk,behavior-hold-tap";
                    #binding-cells = <2>;
                    flavor = "balanced";
                    require-prior-idle-ms = <150>;
                    tapping-term-ms = <280>;
                    quick-tap-ms = <175>;
                    bindings = <&kp>, <&kp>;
                    hold-trigger-key-positions = <KEYS_L>; // List of keys on the left side of the keyboard
                    hold-trigger-on-release;
                };
    };

    combos {
        compatible = "zmk,combos";

        combo_ae {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp DE_A_UMLAUT>;
            layers = <0>;
        };

        combo_ss {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp DE_SZ>;
            layers = <0>;
        };

        combo_oe {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp DE_O_UMLAUT>;
            layers = <0>;
        };

        combo_ue {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp DE_U_UMLAUT>;
            layers = <0>;
        };

        combo_slash {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp DE_SLASH>;
            layers = <0>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp DE_Q            &kp DE_W            &kp DE_F             &kp DE_P           &kp DE_B        &kp DE_J          &kp DE_L               &kp DE_U              &kp DE_Y             &kp DE_DQT
  &hml LEFT_GUI DE_A  &hml LEFT_ALT DE_R  &hml LCTRL DE_S      &hml LEFT_SHIFT F  &kp DE_G        &kp DE_M          &hmr RIGHT_SHIFT DE_N  &hmr RCTRL DE_E       &hmr RIGHT_ALT DE_I  &hmr LEFT_GUI DE_O
  &kp DE_Z            &kp DE_X            &kp DE_C             &kp DE_D           &kp DE_V        &kp DE_K          &kp DE_H               &kp DE_COMMA          &kp DE_DOT           &kp DE_QMARK
                               &lt MEDIA DE_ESCAPE_CHARACTER  &lt NAV DE_SPACE        &lt MOUSE TAB            &lt FUN ENTER   &lt NUM BACKSPACE            &lt SYM DELETE
            >;
        };

        nav_layer {
            bindings = <
                &none       &none       &none       &none       &none           &none &none       &kp UP        &none       &none
                &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &none           &none &kp LEFT    &kp DOWN      &kp RIGHT   &none
                &none       &none       &kp LC(C)   &kp LC(V)   &kp LC(X)       &none &kp HOME    &kp PG_DN     &kp PG_UP   &kp END
                                        &none       &trans       &none          &none &trans      &trans
            >;
        };

        sym_layer {
            bindings = <
                &kp DE_APOS  &kp DE_LT    &kp DE_GT    &kp DE_DQT    &kp DE_DOT       &kp DE_AMPS   &kp DE_EURO    &kp DE_LBKT    &kp DE_RBKT    &kp DE_PERCENT
                &kp DE_EXCL  &kp DE_MINUS &kp DE_PLUS  &kp DE_EQUAL  &kp DE_HASH      &kp DE_PIPE   &kp DE_COLON   &kp DE_LPAR    &kp DE_RPAR    &kp DE_QMARK
                &kp DE_CARET &kp DE_SLASH &kp DE_STAR  &kp DE_BSLH   &kp DE_UNDER     &kp DE_TILDE  &kp DE_DOLLAR  &kp DE_LBRC    &kp DE_RBRC    &kp DE_AT
                                          &kp DE_GRAVE &none         &none            &none         &none          &trans
            >;
        };

        num_layer {
             bindings = <
                &none    &kp N7      &kp N8      &kp N9      &none           &none       &none       &none       &none      &none
                &none    &kp N4      &kp N5      &kp N6      &none           &none       &kp LSHFT   &kp LCTRL   &kp LALT   &kp LGUI
                &none    &kp N1      &kp N2      &kp N3      &none           &none       &none       &none       &none      &none
                                               &kp N0      &kp DE_MINUS    &none       &none       &trans      &none
            >;
        };

        media_layer {
            bindings = <
                &bootloader &reset       &none        &none        &none           &kp C_PP    &kp C_PREV  &kp C_NEXT  &none       &none
                &kp LGUI    &kp LALT     &kp LCTRL    &kp LSHFT    &none           &kp C_MUTE  &kp C_VOL_DN &kp C_VOL_UP &none      &none
                &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3    &none      &none       &none       &none       &none
                                         &trans       &none        &none           &none      &none       &none
            >;
        };

        fun_layer {
            bindings = <
                &kp F12    &kp F7      &kp F8      &kp F9      &kp SYS_REG     &none       &none       &none       &none      &none
                &kp F11    &kp F4      &kp F5      &kp F6      &none           &none       &kp LSHFT   &kp LCTRL   &kp LALT   &kp LGUI
                &kp F10    &kp F1      &kp F2      &kp F3      &none           &none       &none       &none       &none      &none
                                       &none       &none       &none           &trans      &none      &none
            >;
        };

        mouse_layer {
            bindings = <
                &none       &none       &none       &none       &none           &none &none             &mmv MOVE_UP    &none           &none
                &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &none           &none &mmv MOVE_LEFT    &mmv MOVE_DOWN  &mmv MOVE_RIGHT &none
                &none       &none       &none       &none       &none           &none &mwh SCROLL_DOWN  &mwh SCROLL_UP  &none           &none
                                        &none      &none       &trans           &mkp RCLK       &mkp LCLK          &mkp MCLK
            >;
        };


    };
};
